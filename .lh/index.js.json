{
    "sourceFile": "index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1686627933477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686627953164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,88 +30,8 @@\n   }\n \n   return result;\n }\n-function getCartTotal(cart) {\n-  if (cart.length === 0) {\n-    throw new Error(\"The Cart is empty.\");\n-  }\n-\n-  let result = 0;\n-\n-  for (let product of cart) {\n-    result += product.priceInCents;\n-  }\n-\n-  return result;\n-}\n-function getCartTotal(cart) {\n-  if (cart.length === 0) {\n-    throw new Error(\"The Cart is empty.\");\n-  }\n-\n-  let result = 0;\n-\n-  for (let product of cart) {\n-    result += product.priceInCents;\n-  }\n-\n-  return result;\n-}\n-function getCartTotal(cart) {\n-  if (cart.length === 0) {\n-    throw new Error(\"The Cart is empty.\");\n-  }\n-\n-  let result = 0;\n-\n-  for (let product of cart) {\n-    result += product.priceInCents;\n-  }\n-\n-  return result;\n-}\n-function getCartTotal(cart) {\n-  if (cart.length === 0) {\n-    throw new Error(\"The Cart is empty.\");\n-  }\n-\n-  let result = 0;\n-\n-  for (let product of cart) {\n-    result += product.priceInCents;\n-  }\n-\n-  return result;\n-}\n-function getCartTotal(cart) {\n-  if (cart.length === 0) {\n-    throw new Error(\"The Cart is empty.\");\n-  }\n-\n-  let result = 0;\n-\n-  for (let product of cart) {\n-    result += product.priceInCents;\n-  }\n-\n-  return result;\n-}\n-function getCartTotal(cart) {\n-  if (cart.length === 0) {\n-    throw new Error(\"The Cart is empty.\");\n-  }\n-\n-  let result = 0;\n-\n-  for (let product of cart) {\n-    result += product.priceInCents;\n-  }\n-\n-  return result;\n-}\n-\n-/*\n   This function should throw an error if:\n   - The `products` array is empty.\n   - Either `min` or `max` is not a number.\n   - `max` is equal to `0`.\n"
                },
                {
                    "date": 1686628065808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n   }\n \n   return result;\n }\n-  This function should throw an error if:\n+ ?* This function should throw an error if:\n   - The `products` array is empty.\n   - Either `min` or `max` is not a number.\n   - `max` is equal to `0`.\n   - `min` is greater than `max`.\n"
                },
                {
                    "date": 1686628165499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,10 @@\n   }\n \n   return result;\n }\n- ?* This function should throw an error if:\n+ /*\n+  This function should throw an error if:\n   - The `products` array is empty.\n   - Either `min` or `max` is not a number.\n   - `max` is equal to `0`.\n   - `min` is greater than `max`.\n@@ -52,8 +53,9 @@\n /*\n   If any errors occur in this function, it should return `0`.\n */\n function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  \n   const filteredProducts = filterProductsByPriceRange(products, min, max);\n   const total = getCartTotal(filteredProducts);\n \n   return total;\n"
                },
                {
                    "date": 1686628227905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,14 @@\n /*\n   If any errors occur in this function, it should return `0`.\n */\n function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  if (products.length === 0) {\n+    throw new Error(\"There are no products.\");\n+  }\n+  if (isNaN(min) || isNaN(max) || min < 0 || max < 0 || max === 0 || min > max) {\n+    throw new Error(\"There was an error with the price range.\");\n+  }\n   \n   const filteredProducts = filterProductsByPriceRange(products, min, max);\n   const total = getCartTotal(filteredProducts);\n \n"
                },
                {
                    "date": 1686628238726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,19 @@\n   }\n   if (isNaN(min) || isNaN(max) || min < 0 || max < 0 || max === 0 || min > max) {\n     throw new Error(\"There was an error with the price range.\");\n   }\n-  \n+  const result = [];\n+for (let product of products) {\n+  if (!product.priceInCents) {\n+    throw new Error(\"One of the products has no price.\");\n+  }\n+  if (product.priceInCents >= min && product.priceInCents <= max) {\n+    result.push(product);\n+  }\n+}\n+return result;\n+\n   const filteredProducts = filterProductsByPriceRange(products, min, max);\n   const total = getCartTotal(filteredProducts);\n \n   return total;\n"
                },
                {
                    "date": 1686628322355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,31 +53,541 @@\n /*\n   If any errors occur in this function, it should return `0`.\n */\n function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  if (products.length === 0) {\n-    throw new Error(\"There are no products.\");\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n   }\n-  if (isNaN(min) || isNaN(max) || min < 0 || max < 0 || max === 0 || min > max) {\n-    throw new Error(\"There was an error with the price range.\");\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n   }\n-  const result = [];\n-for (let product of products) {\n-  if (!product.priceInCents) {\n-    throw new Error(\"One of the products has no price.\");\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n   }\n-  if (product.priceInCents >= min && product.priceInCents <= max) {\n-    result.push(product);\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n   }\n }\n-return result;\n \n-  const filteredProducts = filterProductsByPriceRange(products, min, max);\n-  const total = getCartTotal(filteredProducts);\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n \n-  return total;\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n }\n \n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n+function getTotalOfAllProductsByPriceRange(products, min, max) {\n+  try {\n+    const filteredProducts = filterProductsByPriceRange(products, min, max);\n+    const total = getCartTotal(filteredProducts);\n+    return total;\n+  } catch (error) {\n+    console.log(\"An error occurred!\", error);\n+    return 0;\n+  }\n+}\n+\n+const products = exampleProducts;\n+const min = 1000;\n+const max = 40000;\n+\n+const result = getTotalOfAllProductsByPriceRange(products, min, max);\n+console.log(result);\n+\n module.exports = {\n   getCartTotal,\n   filterProductsByPriceRange,\n   getTotalOfAllProductsByPriceRange,\n"
                },
                {
                    "date": 1686628356247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,527 +68,5 @@\n const min = 1000;\n const max = 40000;\n \n const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-function getTotalOfAllProductsByPriceRange(products, min, max) {\n-  try {\n-    const filteredProducts = filterProductsByPriceRange(products, min, max);\n-    const total = getCartTotal(filteredProducts);\n-    return total;\n-  } catch (error) {\n-    console.log(\"An error occurred!\", error);\n-    return 0;\n-  }\n-}\n-\n-const products = exampleProducts;\n-const min = 1000;\n-const max = 40000;\n-\n-const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n-\n-module.exports = {\n-  getCartTotal,\n-  filterProductsByPriceRange,\n-  getTotalOfAllProductsByPriceRange,\n-};\n+console.log(result);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686628366286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,5 +68,5 @@\n const min = 1000;\n const max = 40000;\n \n const result = getTotalOfAllProductsByPriceRange(products, min, max);\n-console.log(result);\n\\ No newline at end of file\n+console.log(result);\n"
                },
                {
                    "date": 1686628377624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,4 +69,5 @@\n const max = 40000;\n \n const result = getTotalOfAllProductsByPriceRange(products, min, max);\n console.log(result);\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686628384266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,5 +69,4 @@\n const max = 40000;\n \n const result = getTotalOfAllProductsByPriceRange(products, min, max);\n console.log(result);\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1686628403684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,4 +69,5 @@\n const max = 40000;\n \n const result = getTotalOfAllProductsByPriceRange(products, min, max);\n console.log(result);\n+\n"
                },
                {
                    "date": 1686629391008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,22 @@\n   - `min` is greater than `max`.\n   - Either `min` or `max` is less than `0`.\n   - Any of the products in the `products` array does not have a `priceInCents` key.\n */\n-function filterProductsByPriceRange(products, min, max) {\n-  const result = [];\n+function filterProductsByPriceRange(products, min, max) {if (products.length === 0) {\n+  throw new Error(\"There are no products.\");\n+}\n+if (isNaN(min) || isNaN(max) || min < 0 || max < 0 || max === 0 || min > max) {\n+  throw new Error(\"There was an error with the price range.\");\n+}\n+const result = [];\n+ if (products.length === 0) {\n+  throw new Error(\"There are no products.\");\n+}\n+if (isNaN(min) || isNaN(max) || min < 0 || max < 0 || max === 0 || min > max) {\n+  throw new Error(\"There was an error with the price range.\");\n+}\n+const result = [];\n   for (let product of products) {\n     if (product.priceInCents >= min && product.priceInCents <= max) {\n       result.push(product);\n     }\n@@ -70,4 +82,9 @@\n \n const result = getTotalOfAllProductsByPriceRange(products, min, max);\n console.log(result);\n \n+module.exports = {\n+  getCartTotal,\n+  filterProductsByPriceRange,\n+  getTotalOfAllProductsByPriceRange,\n+};\n"
                },
                {
                    "date": 1686629413914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,10 +44,10 @@\n   throw new Error(\"There are no products.\");\n }\n if (isNaN(min) || isNaN(max) || min < 0 || max < 0 || max === 0 || min > max) {\n   throw new Error(\"There was an error with the price range.\");\n+\n }\n-}\n const result = [];\n   for (let product of products) {\n     if (product.priceInCents >= min && product.priceInCents <= max) {\n       result.push(product);\n"
                }
            ],
            "date": 1686627933476,
            "name": "Commit-0",
            "content": "/*\n  Do not change the line below. If you'd like to run code from this file, you may use the `exampleSongData` variable below to gain access to tickets data. This data is pulled from the `data/songs.js` file.\n\n  You may use this data to test your functions. You may assume the shape of the data remains the same but that the values may change.\n\n  Keep in mind that your functions must still have and use a parameter for accepting all songs.\n*/\nconst exampleProducts = [\n  { id: 1, name: \"Panel Headboard\", priceInCents: 12332 },\n  { id: 2, name: \"Low Profile Sleigh Bed\", priceInCents: 22999 },\n  { id: 3, name: \"Oval 100% Cotton Solid Bath Rug\", priceInCents: 1399 },\n  { id: 4, name: \"Abstract Light Gray Area Rug\", priceInCents: 33999 },\n  { id: 5, name: \"Multi Game Table\", priceInCents: 81743 },\n];\n// Do not change the line above.\n\n/*\n  This function should throw an error if:\n  - The `cart` array is empty.\n*/\nfunction getCartTotal(cart) {\n  if (cart.length === 0) {\n    throw new Error(\"The Cart is empty.\");\n  }\n\n  let result = 0;\n\n  for (let product of cart) {\n    result += product.priceInCents;\n  }\n\n  return result;\n}\nfunction getCartTotal(cart) {\n  if (cart.length === 0) {\n    throw new Error(\"The Cart is empty.\");\n  }\n\n  let result = 0;\n\n  for (let product of cart) {\n    result += product.priceInCents;\n  }\n\n  return result;\n}\nfunction getCartTotal(cart) {\n  if (cart.length === 0) {\n    throw new Error(\"The Cart is empty.\");\n  }\n\n  let result = 0;\n\n  for (let product of cart) {\n    result += product.priceInCents;\n  }\n\n  return result;\n}\nfunction getCartTotal(cart) {\n  if (cart.length === 0) {\n    throw new Error(\"The Cart is empty.\");\n  }\n\n  let result = 0;\n\n  for (let product of cart) {\n    result += product.priceInCents;\n  }\n\n  return result;\n}\nfunction getCartTotal(cart) {\n  if (cart.length === 0) {\n    throw new Error(\"The Cart is empty.\");\n  }\n\n  let result = 0;\n\n  for (let product of cart) {\n    result += product.priceInCents;\n  }\n\n  return result;\n}\nfunction getCartTotal(cart) {\n  if (cart.length === 0) {\n    throw new Error(\"The Cart is empty.\");\n  }\n\n  let result = 0;\n\n  for (let product of cart) {\n    result += product.priceInCents;\n  }\n\n  return result;\n}\nfunction getCartTotal(cart) {\n  if (cart.length === 0) {\n    throw new Error(\"The Cart is empty.\");\n  }\n\n  let result = 0;\n\n  for (let product of cart) {\n    result += product.priceInCents;\n  }\n\n  return result;\n}\n\n/*\n  This function should throw an error if:\n  - The `products` array is empty.\n  - Either `min` or `max` is not a number.\n  - `max` is equal to `0`.\n  - `min` is greater than `max`.\n  - Either `min` or `max` is less than `0`.\n  - Any of the products in the `products` array does not have a `priceInCents` key.\n*/\nfunction filterProductsByPriceRange(products, min, max) {\n  const result = [];\n  for (let product of products) {\n    if (product.priceInCents >= min && product.priceInCents <= max) {\n      result.push(product);\n    }\n  }\n  return result;\n}\n\n/*\n  If any errors occur in this function, it should return `0`.\n*/\nfunction getTotalOfAllProductsByPriceRange(products, min, max) {\n  const filteredProducts = filterProductsByPriceRange(products, min, max);\n  const total = getCartTotal(filteredProducts);\n\n  return total;\n}\n\nmodule.exports = {\n  getCartTotal,\n  filterProductsByPriceRange,\n  getTotalOfAllProductsByPriceRange,\n};\n"
        }
    ]
}